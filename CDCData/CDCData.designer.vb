'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HPB_db")>  _
Partial Public Class CDCDataDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPOHeader(instance As POHeader)
    End Sub
  Partial Private Sub UpdatePOHeader(instance As POHeader)
    End Sub
  Partial Private Sub DeletePOHeader(instance As POHeader)
    End Sub
  Partial Private Sub InsertPODetail(instance As PODetail)
    End Sub
  Partial Private Sub UpdatePODetail(instance As PODetail)
    End Sub
  Partial Private Sub DeletePODetail(instance As PODetail)
    End Sub
  Partial Private Sub InsertRequisitionDetail(instance As RequisitionDetail)
    End Sub
  Partial Private Sub UpdateRequisitionDetail(instance As RequisitionDetail)
    End Sub
  Partial Private Sub DeleteRequisitionDetail(instance As RequisitionDetail)
    End Sub
  Partial Private Sub InsertRequisitionHeader(instance As RequisitionHeader)
    End Sub
  Partial Private Sub UpdateRequisitionHeader(instance As RequisitionHeader)
    End Sub
  Partial Private Sub DeleteRequisitionHeader(instance As RequisitionHeader)
    End Sub
  Partial Private Sub InsertProductMaster(instance As ProductMaster)
    End Sub
  Partial Private Sub UpdateProductMaster(instance As ProductMaster)
    End Sub
  Partial Private Sub DeleteProductMaster(instance As ProductMaster)
    End Sub
  Partial Private Sub InsertPODist(instance As PODist)
    End Sub
  Partial Private Sub UpdatePODist(instance As PODist)
    End Sub
  Partial Private Sub DeletePODist(instance As PODist)
    End Sub
  Partial Private Sub InsertProductMasterDist(instance As ProductMasterDist)
    End Sub
  Partial Private Sub UpdateProductMasterDist(instance As ProductMasterDist)
    End Sub
  Partial Private Sub DeleteProductMasterDist(instance As ProductMasterDist)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CDCData.My.MySettings.Default.HPB_dbConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property POHeaders() As System.Data.Linq.Table(Of POHeader)
		Get
			Return Me.GetTable(Of POHeader)
		End Get
	End Property
	
	Public ReadOnly Property PODetails() As System.Data.Linq.Table(Of PODetail)
		Get
			Return Me.GetTable(Of PODetail)
		End Get
	End Property
	
	Public ReadOnly Property RequisitionDetails() As System.Data.Linq.Table(Of RequisitionDetail)
		Get
			Return Me.GetTable(Of RequisitionDetail)
		End Get
	End Property
	
	Public ReadOnly Property RequisitionHeaders() As System.Data.Linq.Table(Of RequisitionHeader)
		Get
			Return Me.GetTable(Of RequisitionHeader)
		End Get
	End Property
	
	Public ReadOnly Property ProductMasters() As System.Data.Linq.Table(Of ProductMaster)
		Get
			Return Me.GetTable(Of ProductMaster)
		End Get
	End Property
	
	Public ReadOnly Property PODists() As System.Data.Linq.Table(Of PODist)
		Get
			Return Me.GetTable(Of PODist)
		End Get
	End Property
	
	Public ReadOnly Property ProductMasterDists() As System.Data.Linq.Table(Of ProductMasterDist)
		Get
			Return Me.GetTable(Of ProductMasterDist)
		End Get
	End Property
	
	Public ReadOnly Property vwStoreOrds2Exports() As System.Data.Linq.Table(Of vwStoreOrds2Export)
		Get
			Return Me.GetTable(Of vwStoreOrds2Export)
		End Get
	End Property
	
	Public ReadOnly Property vwStoreOrdDtls2Exports() As System.Data.Linq.Table(Of vwStoreOrdDtls2Export)
		Get
			Return Me.GetTable(Of vwStoreOrdDtls2Export)
		End Get
	End Property
	
	Public ReadOnly Property vwStorePOs2Exports() As System.Data.Linq.Table(Of vwStorePOs2Export)
		Get
			Return Me.GetTable(Of vwStorePOs2Export)
		End Get
	End Property
	
	Public ReadOnly Property vwPO2Exports() As System.Data.Linq.Table(Of vwPO2Export)
		Get
			Return Me.GetTable(Of vwPO2Export)
		End Get
	End Property
	
	Public ReadOnly Property vwPODtl2Exports() As System.Data.Linq.Table(Of vwPODtl2Export)
		Get
			Return Me.GetTable(Of vwPODtl2Export)
		End Get
	End Property
	
	Public ReadOnly Property vwNewItems() As System.Data.Linq.Table(Of vwNewItem)
		Get
			Return Me.GetTable(Of vwNewItem)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DS_ProdMstUpdateStatus")>  _
	Public Function DS_ProdMstUpdateStatus(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ItemCode", DbType:="VarChar(20)")> ByVal itemCode As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Int")> ByVal status As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), itemCode, status)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DS_OrderHdrUpdateStatus")>  _
	Public Function DS_OrderHdrUpdateStatus(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PONumber", DbType:="VarChar(20)")> ByVal pONumber As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Int")> ByVal status As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), pONumber, status)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.WMS_CDC_DropShipments")>  _
	Public Function WMS_CDC_DropShipments(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NText")> ByVal xml As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="File", DbType:="VarChar(50)")> ByVal file As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), xml, file)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.WMS_ILS_ShipmentRecords")>  _
	Public Function WMS_ILS_ShipmentRecords(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NText")> ByVal xml As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="File", DbType:="VarChar(50)")> ByVal file As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), xml, file)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.WMS_ILS_UpdShipRecs")>  _
	Public Function WMS_ILS_UpdShipRecs(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal procDate As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), procDate)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderHeader")>  _
Partial Public Class POHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PONumber As String
	
	Private _LocationNo As String
	
	Private _POType As System.Nullable(Of Char)
	
	Private _BuyerID As String
	
	Private _VendorID As String
	
	Private _TermsCode As String
	
	Private _PODate As System.Nullable(Of Date)
	
	Private _CancelDate As System.Nullable(Of Date)
	
	Private _DueDate As System.Nullable(Of Date)
	
	Private _OrderAmount As System.Nullable(Of Decimal)
	
	Private _Printed As Boolean
	
	Private _SendPO As Boolean
	
	Private _SpecInstructions As String
	
	Private _Complete As Boolean
	
	Private _DateComplete As System.Nullable(Of Date)
	
	Private _SkeletonCreatedFrom As String
	
	Private _CreatedFromRequisition As System.Nullable(Of Boolean)
	
	Private _ShipToName As String
	
	Private _ShipToAddress1 As String
	
	Private _ShipToAddress2 As String
	
	Private _ShipToAddress3 As String
	
	Private _PODetails As EntitySet(Of PODetail)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    Partial Private Sub OnLocationNoChanging(value As String)
    End Sub
    Partial Private Sub OnLocationNoChanged()
    End Sub
    Partial Private Sub OnPOTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnPOTypeChanged()
    End Sub
    Partial Private Sub OnBuyerIDChanging(value As String)
    End Sub
    Partial Private Sub OnBuyerIDChanged()
    End Sub
    Partial Private Sub OnVendorIDChanging(value As String)
    End Sub
    Partial Private Sub OnVendorIDChanged()
    End Sub
    Partial Private Sub OnTermsCodeChanging(value As String)
    End Sub
    Partial Private Sub OnTermsCodeChanged()
    End Sub
    Partial Private Sub OnPODateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPODateChanged()
    End Sub
    Partial Private Sub OnCancelDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCancelDateChanged()
    End Sub
    Partial Private Sub OnDueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDueDateChanged()
    End Sub
    Partial Private Sub OnOrderAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrderAmountChanged()
    End Sub
    Partial Private Sub OnPrintedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrintedChanged()
    End Sub
    Partial Private Sub OnSendPOChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSendPOChanged()
    End Sub
    Partial Private Sub OnSpecInstructionsChanging(value As String)
    End Sub
    Partial Private Sub OnSpecInstructionsChanged()
    End Sub
    Partial Private Sub OnCompleteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCompleteChanged()
    End Sub
    Partial Private Sub OnDateCompleteChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCompleteChanged()
    End Sub
    Partial Private Sub OnSkeletonCreatedFromChanging(value As String)
    End Sub
    Partial Private Sub OnSkeletonCreatedFromChanged()
    End Sub
    Partial Private Sub OnCreatedFromRequisitionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCreatedFromRequisitionChanged()
    End Sub
    Partial Private Sub OnShipToNameChanging(value As String)
    End Sub
    Partial Private Sub OnShipToNameChanged()
    End Sub
    Partial Private Sub OnShipToAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnShipToAddress1Changed()
    End Sub
    Partial Private Sub OnShipToAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnShipToAddress2Changed()
    End Sub
    Partial Private Sub OnShipToAddress3Changing(value As String)
    End Sub
    Partial Private Sub OnShipToAddress3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PODetails = New EntitySet(Of PODetail)(AddressOf Me.attach_PODetails, AddressOf Me.detach_PODetails)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me.OnLocationNoChanging(value)
				Me.SendPropertyChanging
				Me._LocationNo = value
				Me.SendPropertyChanged("LocationNo")
				Me.OnLocationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POType", DbType:="VarChar(1)")>  _
	Public Property POType() As System.Nullable(Of Char)
		Get
			Return Me._POType
		End Get
		Set
			If (Me._POType.Equals(value) = false) Then
				Me.OnPOTypeChanging(value)
				Me.SendPropertyChanging
				Me._POType = value
				Me.SendPropertyChanged("POType")
				Me.OnPOTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BuyerID", DbType:="VarChar(10)")>  _
	Public Property BuyerID() As String
		Get
			Return Me._BuyerID
		End Get
		Set
			If (String.Equals(Me._BuyerID, value) = false) Then
				Me.OnBuyerIDChanging(value)
				Me.SendPropertyChanging
				Me._BuyerID = value
				Me.SendPropertyChanged("BuyerID")
				Me.OnBuyerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10)")>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me.OnVendorIDChanging(value)
				Me.SendPropertyChanging
				Me._VendorID = value
				Me.SendPropertyChanged("VendorID")
				Me.OnVendorIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TermsCode", DbType:="VarChar(10)")>  _
	Public Property TermsCode() As String
		Get
			Return Me._TermsCode
		End Get
		Set
			If (String.Equals(Me._TermsCode, value) = false) Then
				Me.OnTermsCodeChanging(value)
				Me.SendPropertyChanging
				Me._TermsCode = value
				Me.SendPropertyChanged("TermsCode")
				Me.OnTermsCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="SmallDateTime")>  _
	Public Property PODate() As System.Nullable(Of Date)
		Get
			Return Me._PODate
		End Get
		Set
			If (Me._PODate.Equals(value) = false) Then
				Me.OnPODateChanging(value)
				Me.SendPropertyChanging
				Me._PODate = value
				Me.SendPropertyChanged("PODate")
				Me.OnPODateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CancelDate", DbType:="SmallDateTime")>  _
	Public Property CancelDate() As System.Nullable(Of Date)
		Get
			Return Me._CancelDate
		End Get
		Set
			If (Me._CancelDate.Equals(value) = false) Then
				Me.OnCancelDateChanging(value)
				Me.SendPropertyChanging
				Me._CancelDate = value
				Me.SendPropertyChanged("CancelDate")
				Me.OnCancelDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DueDate", DbType:="SmallDateTime")>  _
	Public Property DueDate() As System.Nullable(Of Date)
		Get
			Return Me._DueDate
		End Get
		Set
			If (Me._DueDate.Equals(value) = false) Then
				Me.OnDueDateChanging(value)
				Me.SendPropertyChanging
				Me._DueDate = value
				Me.SendPropertyChanged("DueDate")
				Me.OnDueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderAmount", DbType:="Money")>  _
	Public Property OrderAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OrderAmount
		End Get
		Set
			If (Me._OrderAmount.Equals(value) = false) Then
				Me.OnOrderAmountChanging(value)
				Me.SendPropertyChanging
				Me._OrderAmount = value
				Me.SendPropertyChanged("OrderAmount")
				Me.OnOrderAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Printed", DbType:="Bit NOT NULL")>  _
	Public Property Printed() As Boolean
		Get
			Return Me._Printed
		End Get
		Set
			If ((Me._Printed = value)  _
						= false) Then
				Me.OnPrintedChanging(value)
				Me.SendPropertyChanging
				Me._Printed = value
				Me.SendPropertyChanged("Printed")
				Me.OnPrintedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendPO", DbType:="Bit NOT NULL")>  _
	Public Property SendPO() As Boolean
		Get
			Return Me._SendPO
		End Get
		Set
			If ((Me._SendPO = value)  _
						= false) Then
				Me.OnSendPOChanging(value)
				Me.SendPropertyChanging
				Me._SendPO = value
				Me.SendPropertyChanged("SendPO")
				Me.OnSendPOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecInstructions", DbType:="VarChar(255)")>  _
	Public Property SpecInstructions() As String
		Get
			Return Me._SpecInstructions
		End Get
		Set
			If (String.Equals(Me._SpecInstructions, value) = false) Then
				Me.OnSpecInstructionsChanging(value)
				Me.SendPropertyChanging
				Me._SpecInstructions = value
				Me.SendPropertyChanged("SpecInstructions")
				Me.OnSpecInstructionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Complete", DbType:="Bit NOT NULL")>  _
	Public Property Complete() As Boolean
		Get
			Return Me._Complete
		End Get
		Set
			If ((Me._Complete = value)  _
						= false) Then
				Me.OnCompleteChanging(value)
				Me.SendPropertyChanging
				Me._Complete = value
				Me.SendPropertyChanged("Complete")
				Me.OnCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateComplete", DbType:="SmallDateTime")>  _
	Public Property DateComplete() As System.Nullable(Of Date)
		Get
			Return Me._DateComplete
		End Get
		Set
			If (Me._DateComplete.Equals(value) = false) Then
				Me.OnDateCompleteChanging(value)
				Me.SendPropertyChanging
				Me._DateComplete = value
				Me.SendPropertyChanged("DateComplete")
				Me.OnDateCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkeletonCreatedFrom", DbType:="VarChar(6)")>  _
	Public Property SkeletonCreatedFrom() As String
		Get
			Return Me._SkeletonCreatedFrom
		End Get
		Set
			If (String.Equals(Me._SkeletonCreatedFrom, value) = false) Then
				Me.OnSkeletonCreatedFromChanging(value)
				Me.SendPropertyChanging
				Me._SkeletonCreatedFrom = value
				Me.SendPropertyChanged("SkeletonCreatedFrom")
				Me.OnSkeletonCreatedFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedFromRequisition", DbType:="Bit")>  _
	Public Property CreatedFromRequisition() As System.Nullable(Of Boolean)
		Get
			Return Me._CreatedFromRequisition
		End Get
		Set
			If (Me._CreatedFromRequisition.Equals(value) = false) Then
				Me.OnCreatedFromRequisitionChanging(value)
				Me.SendPropertyChanging
				Me._CreatedFromRequisition = value
				Me.SendPropertyChanged("CreatedFromRequisition")
				Me.OnCreatedFromRequisitionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToName", DbType:="VarChar(30)")>  _
	Public Property ShipToName() As String
		Get
			Return Me._ShipToName
		End Get
		Set
			If (String.Equals(Me._ShipToName, value) = false) Then
				Me.OnShipToNameChanging(value)
				Me.SendPropertyChanging
				Me._ShipToName = value
				Me.SendPropertyChanged("ShipToName")
				Me.OnShipToNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress1", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress1() As String
		Get
			Return Me._ShipToAddress1
		End Get
		Set
			If (String.Equals(Me._ShipToAddress1, value) = false) Then
				Me.OnShipToAddress1Changing(value)
				Me.SendPropertyChanging
				Me._ShipToAddress1 = value
				Me.SendPropertyChanged("ShipToAddress1")
				Me.OnShipToAddress1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress2", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress2() As String
		Get
			Return Me._ShipToAddress2
		End Get
		Set
			If (String.Equals(Me._ShipToAddress2, value) = false) Then
				Me.OnShipToAddress2Changing(value)
				Me.SendPropertyChanging
				Me._ShipToAddress2 = value
				Me.SendPropertyChanged("ShipToAddress2")
				Me.OnShipToAddress2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress3", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress3() As String
		Get
			Return Me._ShipToAddress3
		End Get
		Set
			If (String.Equals(Me._ShipToAddress3, value) = false) Then
				Me.OnShipToAddress3Changing(value)
				Me.SendPropertyChanging
				Me._ShipToAddress3 = value
				Me.SendPropertyChanged("ShipToAddress3")
				Me.OnShipToAddress3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="POHeader_PODetail", Storage:="_PODetails", ThisKey:="PONumber", OtherKey:="PONumber")>  _
	Public Property PODetails() As EntitySet(Of PODetail)
		Get
			Return Me._PODetails
		End Get
		Set
			Me._PODetails.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_PODetails(ByVal entity As PODetail)
		Me.SendPropertyChanging
		entity.POHeader = Me
	End Sub
	
	Private Sub detach_PODetails(ByVal entity As PODetail)
		Me.SendPropertyChanging
		entity.POHeader = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderDetail")>  _
Partial Public Class PODetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PONumber As String
	
	Private _POLine As String
	
	Private _ItemCode As String
	
	Private _ISBN As String
	
	Private _DistributionType As System.Nullable(Of Char)
	
	Private _OrderQty As System.Nullable(Of Integer)
	
	Private _UnitType As String
	
	Private _UnitCost As System.Nullable(Of Decimal)
	
	Private _ExtendedLineCost As System.Nullable(Of Decimal)
	
	Private _SchemeID As String
	
	Private _FileClaimAdjustment As Boolean
	
	Private _VoucherNo As String
	
	Private _LocationNo As String
	
	Private _Complete As Boolean
	
	Private _DateComplete As System.Nullable(Of Date)
	
	Private _SpecialInstructions As String
	
	Private _Discount As System.Nullable(Of Double)
	
	Private _RemovedFromReceiver As System.Nullable(Of Boolean)
	
	Private _QtyCounted As System.Nullable(Of Integer)
	
	Private _QtyPer As System.Nullable(Of Integer)
	
	Private _ExtendedQty As System.Nullable(Of Integer)
	
	Private _RowAddedFrom As String
	
	Private _RowAddedByUser As String
	
	Private _RowAddedDate As System.Nullable(Of Date)
	
	Private _POHeader As EntityRef(Of POHeader)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    Partial Private Sub OnPOLineChanging(value As String)
    End Sub
    Partial Private Sub OnPOLineChanged()
    End Sub
    Partial Private Sub OnItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnItemCodeChanged()
    End Sub
    Partial Private Sub OnISBNChanging(value As String)
    End Sub
    Partial Private Sub OnISBNChanged()
    End Sub
    Partial Private Sub OnDistributionTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnDistributionTypeChanged()
    End Sub
    Partial Private Sub OnOrderQtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOrderQtyChanged()
    End Sub
    Partial Private Sub OnUnitTypeChanging(value As String)
    End Sub
    Partial Private Sub OnUnitTypeChanged()
    End Sub
    Partial Private Sub OnUnitCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnitCostChanged()
    End Sub
    Partial Private Sub OnExtendedLineCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnExtendedLineCostChanged()
    End Sub
    Partial Private Sub OnSchemeIDChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeIDChanged()
    End Sub
    Partial Private Sub OnFileClaimAdjustmentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFileClaimAdjustmentChanged()
    End Sub
    Partial Private Sub OnVoucherNoChanging(value As String)
    End Sub
    Partial Private Sub OnVoucherNoChanged()
    End Sub
    Partial Private Sub OnLocationNoChanging(value As String)
    End Sub
    Partial Private Sub OnLocationNoChanged()
    End Sub
    Partial Private Sub OnCompleteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCompleteChanged()
    End Sub
    Partial Private Sub OnDateCompleteChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCompleteChanged()
    End Sub
    Partial Private Sub OnSpecialInstructionsChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialInstructionsChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnRemovedFromReceiverChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRemovedFromReceiverChanged()
    End Sub
    Partial Private Sub OnQtyCountedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtyCountedChanged()
    End Sub
    Partial Private Sub OnQtyPerChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtyPerChanged()
    End Sub
    Partial Private Sub OnExtendedQtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnExtendedQtyChanged()
    End Sub
    Partial Private Sub OnRowAddedFromChanging(value As String)
    End Sub
    Partial Private Sub OnRowAddedFromChanged()
    End Sub
    Partial Private Sub OnRowAddedByUserChanging(value As String)
    End Sub
    Partial Private Sub OnRowAddedByUserChanged()
    End Sub
    Partial Private Sub OnRowAddedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRowAddedDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._POHeader = CType(Nothing, EntityRef(Of POHeader))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				If Me._POHeader.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POLine", DbType:="Char(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property POLine() As String
		Get
			Return Me._POLine
		End Get
		Set
			If (String.Equals(Me._POLine, value) = false) Then
				Me.OnPOLineChanging(value)
				Me.SendPropertyChanging
				Me._POLine = value
				Me.SendPropertyChanged("POLine")
				Me.OnPOLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="VarChar(20)")>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me.OnItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ItemCode = value
				Me.SendPropertyChanged("ItemCode")
				Me.OnItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBN", DbType:="VarChar(13)")>  _
	Public Property ISBN() As String
		Get
			Return Me._ISBN
		End Get
		Set
			If (String.Equals(Me._ISBN, value) = false) Then
				Me.OnISBNChanging(value)
				Me.SendPropertyChanging
				Me._ISBN = value
				Me.SendPropertyChanged("ISBN")
				Me.OnISBNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DistributionType", DbType:="Char(1)")>  _
	Public Property DistributionType() As System.Nullable(Of Char)
		Get
			Return Me._DistributionType
		End Get
		Set
			If (Me._DistributionType.Equals(value) = false) Then
				Me.OnDistributionTypeChanging(value)
				Me.SendPropertyChanging
				Me._DistributionType = value
				Me.SendPropertyChanged("DistributionType")
				Me.OnDistributionTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderQty", DbType:="Int")>  _
	Public Property OrderQty() As System.Nullable(Of Integer)
		Get
			Return Me._OrderQty
		End Get
		Set
			If (Me._OrderQty.Equals(value) = false) Then
				Me.OnOrderQtyChanging(value)
				Me.SendPropertyChanging
				Me._OrderQty = value
				Me.SendPropertyChanged("OrderQty")
				Me.OnOrderQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitType", DbType:="VarChar(3)")>  _
	Public Property UnitType() As String
		Get
			Return Me._UnitType
		End Get
		Set
			If (String.Equals(Me._UnitType, value) = false) Then
				Me.OnUnitTypeChanging(value)
				Me.SendPropertyChanging
				Me._UnitType = value
				Me.SendPropertyChanged("UnitType")
				Me.OnUnitTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitCost", DbType:="Money")>  _
	Public Property UnitCost() As System.Nullable(Of Decimal)
		Get
			Return Me._UnitCost
		End Get
		Set
			If (Me._UnitCost.Equals(value) = false) Then
				Me.OnUnitCostChanging(value)
				Me.SendPropertyChanging
				Me._UnitCost = value
				Me.SendPropertyChanged("UnitCost")
				Me.OnUnitCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExtendedLineCost", DbType:="Money")>  _
	Public Property ExtendedLineCost() As System.Nullable(Of Decimal)
		Get
			Return Me._ExtendedLineCost
		End Get
		Set
			If (Me._ExtendedLineCost.Equals(value) = false) Then
				Me.OnExtendedLineCostChanging(value)
				Me.SendPropertyChanging
				Me._ExtendedLineCost = value
				Me.SendPropertyChanged("ExtendedLineCost")
				Me.OnExtendedLineCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="Char(20)")>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me.OnSchemeIDChanging(value)
				Me.SendPropertyChanging
				Me._SchemeID = value
				Me.SendPropertyChanged("SchemeID")
				Me.OnSchemeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileClaimAdjustment", DbType:="Bit NOT NULL")>  _
	Public Property FileClaimAdjustment() As Boolean
		Get
			Return Me._FileClaimAdjustment
		End Get
		Set
			If ((Me._FileClaimAdjustment = value)  _
						= false) Then
				Me.OnFileClaimAdjustmentChanging(value)
				Me.SendPropertyChanging
				Me._FileClaimAdjustment = value
				Me.SendPropertyChanged("FileClaimAdjustment")
				Me.OnFileClaimAdjustmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VoucherNo", DbType:="VarChar(10)")>  _
	Public Property VoucherNo() As String
		Get
			Return Me._VoucherNo
		End Get
		Set
			If (String.Equals(Me._VoucherNo, value) = false) Then
				Me.OnVoucherNoChanging(value)
				Me.SendPropertyChanging
				Me._VoucherNo = value
				Me.SendPropertyChanged("VoucherNo")
				Me.OnVoucherNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me.OnLocationNoChanging(value)
				Me.SendPropertyChanging
				Me._LocationNo = value
				Me.SendPropertyChanged("LocationNo")
				Me.OnLocationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Complete", DbType:="Bit NOT NULL")>  _
	Public Property Complete() As Boolean
		Get
			Return Me._Complete
		End Get
		Set
			If ((Me._Complete = value)  _
						= false) Then
				Me.OnCompleteChanging(value)
				Me.SendPropertyChanging
				Me._Complete = value
				Me.SendPropertyChanged("Complete")
				Me.OnCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateComplete", DbType:="SmallDateTime")>  _
	Public Property DateComplete() As System.Nullable(Of Date)
		Get
			Return Me._DateComplete
		End Get
		Set
			If (Me._DateComplete.Equals(value) = false) Then
				Me.OnDateCompleteChanging(value)
				Me.SendPropertyChanging
				Me._DateComplete = value
				Me.SendPropertyChanged("DateComplete")
				Me.OnDateCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialInstructions", DbType:="VarChar(50)")>  _
	Public Property SpecialInstructions() As String
		Get
			Return Me._SpecialInstructions
		End Get
		Set
			If (String.Equals(Me._SpecialInstructions, value) = false) Then
				Me.OnSpecialInstructionsChanging(value)
				Me.SendPropertyChanging
				Me._SpecialInstructions = value
				Me.SendPropertyChanged("SpecialInstructions")
				Me.OnSpecialInstructionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Float")>  _
	Public Property Discount() As System.Nullable(Of Double)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me.OnDiscountChanging(value)
				Me.SendPropertyChanging
				Me._Discount = value
				Me.SendPropertyChanged("Discount")
				Me.OnDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RemovedFromReceiver", DbType:="Bit")>  _
	Public Property RemovedFromReceiver() As System.Nullable(Of Boolean)
		Get
			Return Me._RemovedFromReceiver
		End Get
		Set
			If (Me._RemovedFromReceiver.Equals(value) = false) Then
				Me.OnRemovedFromReceiverChanging(value)
				Me.SendPropertyChanging
				Me._RemovedFromReceiver = value
				Me.SendPropertyChanged("RemovedFromReceiver")
				Me.OnRemovedFromReceiverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtyCounted", DbType:="Int")>  _
	Public Property QtyCounted() As System.Nullable(Of Integer)
		Get
			Return Me._QtyCounted
		End Get
		Set
			If (Me._QtyCounted.Equals(value) = false) Then
				Me.OnQtyCountedChanging(value)
				Me.SendPropertyChanging
				Me._QtyCounted = value
				Me.SendPropertyChanged("QtyCounted")
				Me.OnQtyCountedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtyPer", DbType:="Int")>  _
	Public Property QtyPer() As System.Nullable(Of Integer)
		Get
			Return Me._QtyPer
		End Get
		Set
			If (Me._QtyPer.Equals(value) = false) Then
				Me.OnQtyPerChanging(value)
				Me.SendPropertyChanging
				Me._QtyPer = value
				Me.SendPropertyChanged("QtyPer")
				Me.OnQtyPerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExtendedQty", DbType:="Int")>  _
	Public Property ExtendedQty() As System.Nullable(Of Integer)
		Get
			Return Me._ExtendedQty
		End Get
		Set
			If (Me._ExtendedQty.Equals(value) = false) Then
				Me.OnExtendedQtyChanging(value)
				Me.SendPropertyChanging
				Me._ExtendedQty = value
				Me.SendPropertyChanged("ExtendedQty")
				Me.OnExtendedQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowAddedFrom", DbType:="VarChar(20)")>  _
	Public Property RowAddedFrom() As String
		Get
			Return Me._RowAddedFrom
		End Get
		Set
			If (String.Equals(Me._RowAddedFrom, value) = false) Then
				Me.OnRowAddedFromChanging(value)
				Me.SendPropertyChanging
				Me._RowAddedFrom = value
				Me.SendPropertyChanged("RowAddedFrom")
				Me.OnRowAddedFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowAddedByUser", DbType:="Char(10)")>  _
	Public Property RowAddedByUser() As String
		Get
			Return Me._RowAddedByUser
		End Get
		Set
			If (String.Equals(Me._RowAddedByUser, value) = false) Then
				Me.OnRowAddedByUserChanging(value)
				Me.SendPropertyChanging
				Me._RowAddedByUser = value
				Me.SendPropertyChanged("RowAddedByUser")
				Me.OnRowAddedByUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowAddedDate", DbType:="DateTime")>  _
	Public Property RowAddedDate() As System.Nullable(Of Date)
		Get
			Return Me._RowAddedDate
		End Get
		Set
			If (Me._RowAddedDate.Equals(value) = false) Then
				Me.OnRowAddedDateChanging(value)
				Me.SendPropertyChanging
				Me._RowAddedDate = value
				Me.SendPropertyChanged("RowAddedDate")
				Me.OnRowAddedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="POHeader_PODetail", Storage:="_POHeader", ThisKey:="PONumber", OtherKey:="PONumber", IsForeignKey:=true)>  _
	Public Property POHeader() As POHeader
		Get
			Return Me._POHeader.Entity
		End Get
		Set
			Dim previousValue As POHeader = Me._POHeader.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._POHeader.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._POHeader.Entity = Nothing
					previousValue.PODetails.Remove(Me)
				End If
				Me._POHeader.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PODetails.Add(Me)
					Me._PONumber = value.PONumber
				Else
					Me._PONumber = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("POHeader")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RequisitionDetail")>  _
Partial Public Class RequisitionDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RequisitionNo As String
	
	Private _ItemCode As String
	
	Private _ItemRequestDate As Date
	
	Private _RequestedQtyToOrder As System.Nullable(Of Integer)
	
	Private _UnitType As String
	
	Private _Approved As System.Nullable(Of Boolean)
	
	Private _ApprovedBy As String
	
	Private _ApprovedQtyToOrder As System.Nullable(Of Integer)
	
	Private _DateApprovedDisapproved As System.Nullable(Of Date)
	
	Private _PONumber As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRequisitionNoChanging(value As String)
    End Sub
    Partial Private Sub OnRequisitionNoChanged()
    End Sub
    Partial Private Sub OnItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnItemCodeChanged()
    End Sub
    Partial Private Sub OnItemRequestDateChanging(value As Date)
    End Sub
    Partial Private Sub OnItemRequestDateChanged()
    End Sub
    Partial Private Sub OnRequestedQtyToOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRequestedQtyToOrderChanged()
    End Sub
    Partial Private Sub OnUnitTypeChanging(value As String)
    End Sub
    Partial Private Sub OnUnitTypeChanged()
    End Sub
    Partial Private Sub OnApprovedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnApprovedChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    Partial Private Sub OnApprovedQtyToOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprovedQtyToOrderChanged()
    End Sub
    Partial Private Sub OnDateApprovedDisapprovedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateApprovedDisapprovedChanged()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequisitionNo", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property RequisitionNo() As String
		Get
			Return Me._RequisitionNo
		End Get
		Set
			If (String.Equals(Me._RequisitionNo, value) = false) Then
				Me.OnRequisitionNoChanging(value)
				Me.SendPropertyChanging
				Me._RequisitionNo = value
				Me.SendPropertyChanged("RequisitionNo")
				Me.OnRequisitionNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="Char(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me.OnItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ItemCode = value
				Me.SendPropertyChanged("ItemCode")
				Me.OnItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemRequestDate", DbType:="DateTime NOT NULL")>  _
	Public Property ItemRequestDate() As Date
		Get
			Return Me._ItemRequestDate
		End Get
		Set
			If ((Me._ItemRequestDate = value)  _
						= false) Then
				Me.OnItemRequestDateChanging(value)
				Me.SendPropertyChanging
				Me._ItemRequestDate = value
				Me.SendPropertyChanged("ItemRequestDate")
				Me.OnItemRequestDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestedQtyToOrder", DbType:="Int")>  _
	Public Property RequestedQtyToOrder() As System.Nullable(Of Integer)
		Get
			Return Me._RequestedQtyToOrder
		End Get
		Set
			If (Me._RequestedQtyToOrder.Equals(value) = false) Then
				Me.OnRequestedQtyToOrderChanging(value)
				Me.SendPropertyChanging
				Me._RequestedQtyToOrder = value
				Me.SendPropertyChanged("RequestedQtyToOrder")
				Me.OnRequestedQtyToOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitType", DbType:="Char(10)")>  _
	Public Property UnitType() As String
		Get
			Return Me._UnitType
		End Get
		Set
			If (String.Equals(Me._UnitType, value) = false) Then
				Me.OnUnitTypeChanging(value)
				Me.SendPropertyChanging
				Me._UnitType = value
				Me.SendPropertyChanged("UnitType")
				Me.OnUnitTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Bit")>  _
	Public Property Approved() As System.Nullable(Of Boolean)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me.OnApprovedChanging(value)
				Me.SendPropertyChanging
				Me._Approved = value
				Me.SendPropertyChanged("Approved")
				Me.OnApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="VarChar(20)")>  _
	Public Property ApprovedBy() As String
		Get
			Return Me._ApprovedBy
		End Get
		Set
			If (String.Equals(Me._ApprovedBy, value) = false) Then
				Me.OnApprovedByChanging(value)
				Me.SendPropertyChanging
				Me._ApprovedBy = value
				Me.SendPropertyChanged("ApprovedBy")
				Me.OnApprovedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedQtyToOrder", DbType:="Int")>  _
	Public Property ApprovedQtyToOrder() As System.Nullable(Of Integer)
		Get
			Return Me._ApprovedQtyToOrder
		End Get
		Set
			If (Me._ApprovedQtyToOrder.Equals(value) = false) Then
				Me.OnApprovedQtyToOrderChanging(value)
				Me.SendPropertyChanging
				Me._ApprovedQtyToOrder = value
				Me.SendPropertyChanged("ApprovedQtyToOrder")
				Me.OnApprovedQtyToOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApprovedDisapproved", DbType:="SmallDateTime")>  _
	Public Property DateApprovedDisapproved() As System.Nullable(Of Date)
		Get
			Return Me._DateApprovedDisapproved
		End Get
		Set
			If (Me._DateApprovedDisapproved.Equals(value) = false) Then
				Me.OnDateApprovedDisapprovedChanging(value)
				Me.SendPropertyChanging
				Me._DateApprovedDisapproved = value
				Me.SendPropertyChanged("DateApprovedDisapproved")
				Me.OnDateApprovedDisapprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6)")>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RequisitionHeader")>  _
Partial Public Class RequisitionHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RequisitionNo As String
	
	Private _LocationNo As String
	
	Private _RequestBy As String
	
	Private _VendorID As String
	
	Private _RequisitionDate As System.Nullable(Of Date)
	
	Private _ApprovedBy As String
	
	Private _DateApprovedDisapproved As System.Nullable(Of Date)
	
	Private _PONumber As String
	
	Private _LastDateVoided As System.Nullable(Of Date)
	
	Private _LastDateVoidedBy As String
	
	Private _Comments As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRequisitionNoChanging(value As String)
    End Sub
    Partial Private Sub OnRequisitionNoChanged()
    End Sub
    Partial Private Sub OnLocationNoChanging(value As String)
    End Sub
    Partial Private Sub OnLocationNoChanged()
    End Sub
    Partial Private Sub OnRequestByChanging(value As String)
    End Sub
    Partial Private Sub OnRequestByChanged()
    End Sub
    Partial Private Sub OnVendorIDChanging(value As String)
    End Sub
    Partial Private Sub OnVendorIDChanged()
    End Sub
    Partial Private Sub OnRequisitionDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequisitionDateChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As String)
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    Partial Private Sub OnDateApprovedDisapprovedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateApprovedDisapprovedChanged()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    Partial Private Sub OnLastDateVoidedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastDateVoidedChanged()
    End Sub
    Partial Private Sub OnLastDateVoidedByChanging(value As String)
    End Sub
    Partial Private Sub OnLastDateVoidedByChanged()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequisitionNo", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property RequisitionNo() As String
		Get
			Return Me._RequisitionNo
		End Get
		Set
			If (String.Equals(Me._RequisitionNo, value) = false) Then
				Me.OnRequisitionNoChanging(value)
				Me.SendPropertyChanging
				Me._RequisitionNo = value
				Me.SendPropertyChanged("RequisitionNo")
				Me.OnRequisitionNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me.OnLocationNoChanging(value)
				Me.SendPropertyChanging
				Me._LocationNo = value
				Me.SendPropertyChanged("LocationNo")
				Me.OnLocationNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestBy", DbType:="VarChar(20)")>  _
	Public Property RequestBy() As String
		Get
			Return Me._RequestBy
		End Get
		Set
			If (String.Equals(Me._RequestBy, value) = false) Then
				Me.OnRequestByChanging(value)
				Me.SendPropertyChanging
				Me._RequestBy = value
				Me.SendPropertyChanged("RequestBy")
				Me.OnRequestByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10)")>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me.OnVendorIDChanging(value)
				Me.SendPropertyChanging
				Me._VendorID = value
				Me.SendPropertyChanged("VendorID")
				Me.OnVendorIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequisitionDate", DbType:="DateTime")>  _
	Public Property RequisitionDate() As System.Nullable(Of Date)
		Get
			Return Me._RequisitionDate
		End Get
		Set
			If (Me._RequisitionDate.Equals(value) = false) Then
				Me.OnRequisitionDateChanging(value)
				Me.SendPropertyChanging
				Me._RequisitionDate = value
				Me.SendPropertyChanged("RequisitionDate")
				Me.OnRequisitionDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="VarChar(20)")>  _
	Public Property ApprovedBy() As String
		Get
			Return Me._ApprovedBy
		End Get
		Set
			If (String.Equals(Me._ApprovedBy, value) = false) Then
				Me.OnApprovedByChanging(value)
				Me.SendPropertyChanging
				Me._ApprovedBy = value
				Me.SendPropertyChanged("ApprovedBy")
				Me.OnApprovedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApprovedDisapproved", DbType:="SmallDateTime")>  _
	Public Property DateApprovedDisapproved() As System.Nullable(Of Date)
		Get
			Return Me._DateApprovedDisapproved
		End Get
		Set
			If (Me._DateApprovedDisapproved.Equals(value) = false) Then
				Me.OnDateApprovedDisapprovedChanging(value)
				Me.SendPropertyChanging
				Me._DateApprovedDisapproved = value
				Me.SendPropertyChanged("DateApprovedDisapproved")
				Me.OnDateApprovedDisapprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6)")>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastDateVoided", DbType:="DateTime")>  _
	Public Property LastDateVoided() As System.Nullable(Of Date)
		Get
			Return Me._LastDateVoided
		End Get
		Set
			If (Me._LastDateVoided.Equals(value) = false) Then
				Me.OnLastDateVoidedChanging(value)
				Me.SendPropertyChanging
				Me._LastDateVoided = value
				Me.SendPropertyChanged("LastDateVoided")
				Me.OnLastDateVoidedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastDateVoidedBy", DbType:="VarChar(20)")>  _
	Public Property LastDateVoidedBy() As String
		Get
			Return Me._LastDateVoidedBy
		End Get
		Set
			If (String.Equals(Me._LastDateVoidedBy, value) = false) Then
				Me.OnLastDateVoidedByChanging(value)
				Me.SendPropertyChanging
				Me._LastDateVoidedBy = value
				Me.SendPropertyChanged("LastDateVoidedBy")
				Me.OnLastDateVoidedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="VarChar(50)")>  _
	Public Property Comments() As String
		Get
			Return Me._Comments
		End Get
		Set
			If (String.Equals(Me._Comments, value) = false) Then
				Me.OnCommentsChanging(value)
				Me.SendPropertyChanging
				Me._Comments = value
				Me.SendPropertyChanged("Comments")
				Me.OnCommentsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductMaster")>  _
Partial Public Class ProductMaster
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ItemCode As String
	
	Private _ItemAlias As String
	
	Private _Description As String
	
	Private _ProductType As String
	
	Private _VendorID As String
	
	Private _ValidCost As Char
	
	Private _Cost As Decimal
	
	Private _CostBasis As String
	
	Private _PriceMethod As String
	
	Private _AllowRegisterPricing As Char
	
	Private _Price As Decimal
	
	Private _AltPrice As Decimal
	
	Private _SectionCode As String
	
	Private _DistributionCategory As String
	
	Private _SchemeID As String
	
	Private _Title As String
	
	Private _ISBN As String
	
	Private _PurchaseFromVendorID As String
	
	Private _LastPurchaseOrder As String
	
	Private _Note As String
	
	Private _LastVoucherNumber As String
	
	Private _LastInvoiceNo As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _ReclassFromItemCode As String
	
	Private _Reorderable As Char
	
	Private _InternetItem As Char
	
	Private _InternetMinQty As Integer
	
	Private _InternetMaxQty As Integer
	
	Private _MfgSuggestedPrice As System.Nullable(Of Decimal)
	
	Private _UpdateQOH As Char
	
	Private _AllowRegisterTitle As Char
	
	Private _KeyWords As String
	
	Private _UserChar15 As String
	
	Private _UserChar30 As String
	
	Private _UserDate1 As System.Nullable(Of Date)
	
	Private _UserDate2 As System.Nullable(Of Date)
	
	Private _UserInt1 As Integer
	
	Private _UserInt2 As Integer
	
	Private _UserNum1 As Decimal
	
	Private _UserNum2 As Decimal
	
	Private _rowguid As System.Guid
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnItemCodeChanged()
    End Sub
    Partial Private Sub OnItemAliasChanging(value As String)
    End Sub
    Partial Private Sub OnItemAliasChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnProductTypeChanging(value As String)
    End Sub
    Partial Private Sub OnProductTypeChanged()
    End Sub
    Partial Private Sub OnVendorIDChanging(value As String)
    End Sub
    Partial Private Sub OnVendorIDChanged()
    End Sub
    Partial Private Sub OnValidCostChanging(value As Char)
    End Sub
    Partial Private Sub OnValidCostChanged()
    End Sub
    Partial Private Sub OnCostChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCostChanged()
    End Sub
    Partial Private Sub OnCostBasisChanging(value As String)
    End Sub
    Partial Private Sub OnCostBasisChanged()
    End Sub
    Partial Private Sub OnPriceMethodChanging(value As String)
    End Sub
    Partial Private Sub OnPriceMethodChanged()
    End Sub
    Partial Private Sub OnAllowRegisterPricingChanging(value As Char)
    End Sub
    Partial Private Sub OnAllowRegisterPricingChanged()
    End Sub
    Partial Private Sub OnPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPriceChanged()
    End Sub
    Partial Private Sub OnAltPriceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAltPriceChanged()
    End Sub
    Partial Private Sub OnSectionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSectionCodeChanged()
    End Sub
    Partial Private Sub OnDistributionCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnDistributionCategoryChanged()
    End Sub
    Partial Private Sub OnSchemeIDChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeIDChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnISBNChanging(value As String)
    End Sub
    Partial Private Sub OnISBNChanged()
    End Sub
    Partial Private Sub OnPurchaseFromVendorIDChanging(value As String)
    End Sub
    Partial Private Sub OnPurchaseFromVendorIDChanged()
    End Sub
    Partial Private Sub OnLastPurchaseOrderChanging(value As String)
    End Sub
    Partial Private Sub OnLastPurchaseOrderChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnLastVoucherNumberChanging(value As String)
    End Sub
    Partial Private Sub OnLastVoucherNumberChanged()
    End Sub
    Partial Private Sub OnLastInvoiceNoChanging(value As String)
    End Sub
    Partial Private Sub OnLastInvoiceNoChanged()
    End Sub
    Partial Private Sub OnCreateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateDateChanged()
    End Sub
    Partial Private Sub OnReclassFromItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnReclassFromItemCodeChanged()
    End Sub
    Partial Private Sub OnReorderableChanging(value As Char)
    End Sub
    Partial Private Sub OnReorderableChanged()
    End Sub
    Partial Private Sub OnInternetItemChanging(value As Char)
    End Sub
    Partial Private Sub OnInternetItemChanged()
    End Sub
    Partial Private Sub OnInternetMinQtyChanging(value As Integer)
    End Sub
    Partial Private Sub OnInternetMinQtyChanged()
    End Sub
    Partial Private Sub OnInternetMaxQtyChanging(value As Integer)
    End Sub
    Partial Private Sub OnInternetMaxQtyChanged()
    End Sub
    Partial Private Sub OnMfgSuggestedPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMfgSuggestedPriceChanged()
    End Sub
    Partial Private Sub OnUpdateQOHChanging(value As Char)
    End Sub
    Partial Private Sub OnUpdateQOHChanged()
    End Sub
    Partial Private Sub OnAllowRegisterTitleChanging(value As Char)
    End Sub
    Partial Private Sub OnAllowRegisterTitleChanged()
    End Sub
    Partial Private Sub OnKeyWordsChanging(value As String)
    End Sub
    Partial Private Sub OnKeyWordsChanged()
    End Sub
    Partial Private Sub OnUserChar15Changing(value As String)
    End Sub
    Partial Private Sub OnUserChar15Changed()
    End Sub
    Partial Private Sub OnUserChar30Changing(value As String)
    End Sub
    Partial Private Sub OnUserChar30Changed()
    End Sub
    Partial Private Sub OnUserDate1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUserDate1Changed()
    End Sub
    Partial Private Sub OnUserDate2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUserDate2Changed()
    End Sub
    Partial Private Sub OnUserInt1Changing(value As Integer)
    End Sub
    Partial Private Sub OnUserInt1Changed()
    End Sub
    Partial Private Sub OnUserInt2Changing(value As Integer)
    End Sub
    Partial Private Sub OnUserInt2Changed()
    End Sub
    Partial Private Sub OnUserNum1Changing(value As Decimal)
    End Sub
    Partial Private Sub OnUserNum1Changed()
    End Sub
    Partial Private Sub OnUserNum2Changing(value As Decimal)
    End Sub
    Partial Private Sub OnUserNum2Changed()
    End Sub
    Partial Private Sub OnrowguidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnrowguidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="Char(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me.OnItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ItemCode = value
				Me.SendPropertyChanged("ItemCode")
				Me.OnItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemAlias", DbType:="VarChar(18)")>  _
	Public Property ItemAlias() As String
		Get
			Return Me._ItemAlias
		End Get
		Set
			If (String.Equals(Me._ItemAlias, value) = false) Then
				Me.OnItemAliasChanging(value)
				Me.SendPropertyChanging
				Me._ItemAlias = value
				Me.SendPropertyChanged("ItemAlias")
				Me.OnItemAliasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductType", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property ProductType() As String
		Get
			Return Me._ProductType
		End Get
		Set
			If (String.Equals(Me._ProductType, value) = false) Then
				Me.OnProductTypeChanging(value)
				Me.SendPropertyChanging
				Me._ProductType = value
				Me.SendPropertyChanged("ProductType")
				Me.OnProductTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me.OnVendorIDChanging(value)
				Me.SendPropertyChanging
				Me._VendorID = value
				Me.SendPropertyChanged("VendorID")
				Me.OnVendorIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValidCost", DbType:="Char(1) NOT NULL")>  _
	Public Property ValidCost() As Char
		Get
			Return Me._ValidCost
		End Get
		Set
			If ((Me._ValidCost = value)  _
						= false) Then
				Me.OnValidCostChanging(value)
				Me.SendPropertyChanging
				Me._ValidCost = value
				Me.SendPropertyChanged("ValidCost")
				Me.OnValidCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money NOT NULL")>  _
	Public Property Cost() As Decimal
		Get
			Return Me._Cost
		End Get
		Set
			If ((Me._Cost = value)  _
						= false) Then
				Me.OnCostChanging(value)
				Me.SendPropertyChanging
				Me._Cost = value
				Me.SendPropertyChanged("Cost")
				Me.OnCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostBasis", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property CostBasis() As String
		Get
			Return Me._CostBasis
		End Get
		Set
			If (String.Equals(Me._CostBasis, value) = false) Then
				Me.OnCostBasisChanging(value)
				Me.SendPropertyChanging
				Me._CostBasis = value
				Me.SendPropertyChanged("CostBasis")
				Me.OnCostBasisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PriceMethod", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property PriceMethod() As String
		Get
			Return Me._PriceMethod
		End Get
		Set
			If (String.Equals(Me._PriceMethod, value) = false) Then
				Me.OnPriceMethodChanging(value)
				Me.SendPropertyChanging
				Me._PriceMethod = value
				Me.SendPropertyChanged("PriceMethod")
				Me.OnPriceMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowRegisterPricing", DbType:="Char(1) NOT NULL")>  _
	Public Property AllowRegisterPricing() As Char
		Get
			Return Me._AllowRegisterPricing
		End Get
		Set
			If ((Me._AllowRegisterPricing = value)  _
						= false) Then
				Me.OnAllowRegisterPricingChanging(value)
				Me.SendPropertyChanging
				Me._AllowRegisterPricing = value
				Me.SendPropertyChanged("AllowRegisterPricing")
				Me.OnAllowRegisterPricingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money NOT NULL")>  _
	Public Property Price() As Decimal
		Get
			Return Me._Price
		End Get
		Set
			If ((Me._Price = value)  _
						= false) Then
				Me.OnPriceChanging(value)
				Me.SendPropertyChanging
				Me._Price = value
				Me.SendPropertyChanged("Price")
				Me.OnPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AltPrice", DbType:="Money NOT NULL")>  _
	Public Property AltPrice() As Decimal
		Get
			Return Me._AltPrice
		End Get
		Set
			If ((Me._AltPrice = value)  _
						= false) Then
				Me.OnAltPriceChanging(value)
				Me.SendPropertyChanging
				Me._AltPrice = value
				Me.SendPropertyChanged("AltPrice")
				Me.OnAltPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SectionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property SectionCode() As String
		Get
			Return Me._SectionCode
		End Get
		Set
			If (String.Equals(Me._SectionCode, value) = false) Then
				Me.OnSectionCodeChanging(value)
				Me.SendPropertyChanging
				Me._SectionCode = value
				Me.SendPropertyChanged("SectionCode")
				Me.OnSectionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DistributionCategory", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property DistributionCategory() As String
		Get
			Return Me._DistributionCategory
		End Get
		Set
			If (String.Equals(Me._DistributionCategory, value) = false) Then
				Me.OnDistributionCategoryChanging(value)
				Me.SendPropertyChanging
				Me._DistributionCategory = value
				Me.SendPropertyChanged("DistributionCategory")
				Me.OnDistributionCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="VarChar(20)")>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me.OnSchemeIDChanging(value)
				Me.SendPropertyChanging
				Me._SchemeID = value
				Me.SendPropertyChanged("SchemeID")
				Me.OnSchemeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBN", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property ISBN() As String
		Get
			Return Me._ISBN
		End Get
		Set
			If (String.Equals(Me._ISBN, value) = false) Then
				Me.OnISBNChanging(value)
				Me.SendPropertyChanging
				Me._ISBN = value
				Me.SendPropertyChanged("ISBN")
				Me.OnISBNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurchaseFromVendorID", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property PurchaseFromVendorID() As String
		Get
			Return Me._PurchaseFromVendorID
		End Get
		Set
			If (String.Equals(Me._PurchaseFromVendorID, value) = false) Then
				Me.OnPurchaseFromVendorIDChanging(value)
				Me.SendPropertyChanging
				Me._PurchaseFromVendorID = value
				Me.SendPropertyChanged("PurchaseFromVendorID")
				Me.OnPurchaseFromVendorIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPurchaseOrder", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
	Public Property LastPurchaseOrder() As String
		Get
			Return Me._LastPurchaseOrder
		End Get
		Set
			If (String.Equals(Me._LastPurchaseOrder, value) = false) Then
				Me.OnLastPurchaseOrderChanging(value)
				Me.SendPropertyChanging
				Me._LastPurchaseOrder = value
				Me.SendPropertyChanged("LastPurchaseOrder")
				Me.OnLastPurchaseOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastVoucherNumber", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property LastVoucherNumber() As String
		Get
			Return Me._LastVoucherNumber
		End Get
		Set
			If (String.Equals(Me._LastVoucherNumber, value) = false) Then
				Me.OnLastVoucherNumberChanging(value)
				Me.SendPropertyChanging
				Me._LastVoucherNumber = value
				Me.SendPropertyChanged("LastVoucherNumber")
				Me.OnLastVoucherNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastInvoiceNo", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property LastInvoiceNo() As String
		Get
			Return Me._LastInvoiceNo
		End Get
		Set
			If (String.Equals(Me._LastInvoiceNo, value) = false) Then
				Me.OnLastInvoiceNoChanging(value)
				Me.SendPropertyChanging
				Me._LastInvoiceNo = value
				Me.SendPropertyChanged("LastInvoiceNo")
				Me.OnLastInvoiceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="SmallDateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me.OnCreateDateChanging(value)
				Me.SendPropertyChanging
				Me._CreateDate = value
				Me.SendPropertyChanged("CreateDate")
				Me.OnCreateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReclassFromItemCode", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ReclassFromItemCode() As String
		Get
			Return Me._ReclassFromItemCode
		End Get
		Set
			If (String.Equals(Me._ReclassFromItemCode, value) = false) Then
				Me.OnReclassFromItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ReclassFromItemCode = value
				Me.SendPropertyChanged("ReclassFromItemCode")
				Me.OnReclassFromItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reorderable", DbType:="Char(1) NOT NULL")>  _
	Public Property Reorderable() As Char
		Get
			Return Me._Reorderable
		End Get
		Set
			If ((Me._Reorderable = value)  _
						= false) Then
				Me.OnReorderableChanging(value)
				Me.SendPropertyChanging
				Me._Reorderable = value
				Me.SendPropertyChanged("Reorderable")
				Me.OnReorderableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetItem", DbType:="Char(1) NOT NULL")>  _
	Public Property InternetItem() As Char
		Get
			Return Me._InternetItem
		End Get
		Set
			If ((Me._InternetItem = value)  _
						= false) Then
				Me.OnInternetItemChanging(value)
				Me.SendPropertyChanging
				Me._InternetItem = value
				Me.SendPropertyChanged("InternetItem")
				Me.OnInternetItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetMinQty", DbType:="Int NOT NULL")>  _
	Public Property InternetMinQty() As Integer
		Get
			Return Me._InternetMinQty
		End Get
		Set
			If ((Me._InternetMinQty = value)  _
						= false) Then
				Me.OnInternetMinQtyChanging(value)
				Me.SendPropertyChanging
				Me._InternetMinQty = value
				Me.SendPropertyChanged("InternetMinQty")
				Me.OnInternetMinQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternetMaxQty", DbType:="Int NOT NULL")>  _
	Public Property InternetMaxQty() As Integer
		Get
			Return Me._InternetMaxQty
		End Get
		Set
			If ((Me._InternetMaxQty = value)  _
						= false) Then
				Me.OnInternetMaxQtyChanging(value)
				Me.SendPropertyChanging
				Me._InternetMaxQty = value
				Me.SendPropertyChanged("InternetMaxQty")
				Me.OnInternetMaxQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MfgSuggestedPrice", DbType:="Money")>  _
	Public Property MfgSuggestedPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._MfgSuggestedPrice
		End Get
		Set
			If (Me._MfgSuggestedPrice.Equals(value) = false) Then
				Me.OnMfgSuggestedPriceChanging(value)
				Me.SendPropertyChanging
				Me._MfgSuggestedPrice = value
				Me.SendPropertyChanged("MfgSuggestedPrice")
				Me.OnMfgSuggestedPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateQOH", DbType:="Char(1) NOT NULL")>  _
	Public Property UpdateQOH() As Char
		Get
			Return Me._UpdateQOH
		End Get
		Set
			If ((Me._UpdateQOH = value)  _
						= false) Then
				Me.OnUpdateQOHChanging(value)
				Me.SendPropertyChanging
				Me._UpdateQOH = value
				Me.SendPropertyChanged("UpdateQOH")
				Me.OnUpdateQOHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowRegisterTitle", DbType:="Char(1) NOT NULL")>  _
	Public Property AllowRegisterTitle() As Char
		Get
			Return Me._AllowRegisterTitle
		End Get
		Set
			If ((Me._AllowRegisterTitle = value)  _
						= false) Then
				Me.OnAllowRegisterTitleChanging(value)
				Me.SendPropertyChanging
				Me._AllowRegisterTitle = value
				Me.SendPropertyChanged("AllowRegisterTitle")
				Me.OnAllowRegisterTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KeyWords", DbType:="VarChar(50)")>  _
	Public Property KeyWords() As String
		Get
			Return Me._KeyWords
		End Get
		Set
			If (String.Equals(Me._KeyWords, value) = false) Then
				Me.OnKeyWordsChanging(value)
				Me.SendPropertyChanging
				Me._KeyWords = value
				Me.SendPropertyChanged("KeyWords")
				Me.OnKeyWordsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserChar15", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property UserChar15() As String
		Get
			Return Me._UserChar15
		End Get
		Set
			If (String.Equals(Me._UserChar15, value) = false) Then
				Me.OnUserChar15Changing(value)
				Me.SendPropertyChanging
				Me._UserChar15 = value
				Me.SendPropertyChanged("UserChar15")
				Me.OnUserChar15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserChar30", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property UserChar30() As String
		Get
			Return Me._UserChar30
		End Get
		Set
			If (String.Equals(Me._UserChar30, value) = false) Then
				Me.OnUserChar30Changing(value)
				Me.SendPropertyChanging
				Me._UserChar30 = value
				Me.SendPropertyChanged("UserChar30")
				Me.OnUserChar30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserDate1", DbType:="DateTime")>  _
	Public Property UserDate1() As System.Nullable(Of Date)
		Get
			Return Me._UserDate1
		End Get
		Set
			If (Me._UserDate1.Equals(value) = false) Then
				Me.OnUserDate1Changing(value)
				Me.SendPropertyChanging
				Me._UserDate1 = value
				Me.SendPropertyChanged("UserDate1")
				Me.OnUserDate1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserDate2", DbType:="DateTime")>  _
	Public Property UserDate2() As System.Nullable(Of Date)
		Get
			Return Me._UserDate2
		End Get
		Set
			If (Me._UserDate2.Equals(value) = false) Then
				Me.OnUserDate2Changing(value)
				Me.SendPropertyChanging
				Me._UserDate2 = value
				Me.SendPropertyChanged("UserDate2")
				Me.OnUserDate2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserInt1", DbType:="Int NOT NULL")>  _
	Public Property UserInt1() As Integer
		Get
			Return Me._UserInt1
		End Get
		Set
			If ((Me._UserInt1 = value)  _
						= false) Then
				Me.OnUserInt1Changing(value)
				Me.SendPropertyChanging
				Me._UserInt1 = value
				Me.SendPropertyChanged("UserInt1")
				Me.OnUserInt1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserInt2", DbType:="Int NOT NULL")>  _
	Public Property UserInt2() As Integer
		Get
			Return Me._UserInt2
		End Get
		Set
			If ((Me._UserInt2 = value)  _
						= false) Then
				Me.OnUserInt2Changing(value)
				Me.SendPropertyChanging
				Me._UserInt2 = value
				Me.SendPropertyChanged("UserInt2")
				Me.OnUserInt2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserNum1", DbType:="Decimal(12,0) NOT NULL")>  _
	Public Property UserNum1() As Decimal
		Get
			Return Me._UserNum1
		End Get
		Set
			If ((Me._UserNum1 = value)  _
						= false) Then
				Me.OnUserNum1Changing(value)
				Me.SendPropertyChanging
				Me._UserNum1 = value
				Me.SendPropertyChanged("UserNum1")
				Me.OnUserNum1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserNum2", DbType:="Decimal(12,0) NOT NULL")>  _
	Public Property UserNum2() As Decimal
		Get
			Return Me._UserNum2
		End Get
		Set
			If ((Me._UserNum2 = value)  _
						= false) Then
				Me.OnUserNum2Changing(value)
				Me.SendPropertyChanging
				Me._UserNum2 = value
				Me.SendPropertyChanged("UserNum2")
				Me.OnUserNum2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rowguid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property rowguid() As System.Guid
		Get
			Return Me._rowguid
		End Get
		Set
			If ((Me._rowguid = value)  _
						= false) Then
				Me.OnrowguidChanging(value)
				Me.SendPropertyChanging
				Me._rowguid = value
				Me.SendPropertyChanged("rowguid")
				Me.OnrowguidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrderHeaderDist")>  _
Partial Public Class PODist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PONumber As String
	
	Private _Status As Integer
	
	Private _WMSType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPONumberChanging(value As String)
    End Sub
    Partial Private Sub OnPONumberChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnWMSTypeChanging(value As String)
    End Sub
    Partial Private Sub OnWMSTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me.OnPONumberChanging(value)
				Me.SendPropertyChanging
				Me._PONumber = value
				Me.SendPropertyChanged("PONumber")
				Me.OnPONumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WMSType", DbType:="VarChar(20)")>  _
	Public Property WMSType() As String
		Get
			Return Me._WMSType
		End Get
		Set
			If (String.Equals(Me._WMSType, value) = false) Then
				Me.OnWMSTypeChanging(value)
				Me.SendPropertyChanging
				Me._WMSType = value
				Me.SendPropertyChanged("WMSType")
				Me.OnWMSTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProductMasterDist")>  _
Partial Public Class ProductMasterDist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ItemCode As String
	
	Private _Discount As System.Nullable(Of Double)
	
	Private _VendorItemNo As String
	
	Private _ASIN As String
	
	Private _SchemeID As String
	
	Private _CreatedBy As String
	
	Private _LastChangeBy As String
	
	Private _LastChangeDate As System.Nullable(Of Date)
	
	Private _CalcCost As Decimal
	
	Private _CalcDate As System.Nullable(Of Date)
	
	Private _CalcOveride As Char
	
	Private _CalcDesc As String
	
	Private _ReorderableItem As Char
	
	Private _RetailText As String
	
	Private _UPC As String
	
	Private _UnitsPerCase As Integer
	
	Private _Active As Boolean
	
	Private _TTBProdType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnItemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnItemCodeChanged()
    End Sub
    Partial Private Sub OnDiscountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDiscountChanged()
    End Sub
    Partial Private Sub OnVendorItemNoChanging(value As String)
    End Sub
    Partial Private Sub OnVendorItemNoChanged()
    End Sub
    Partial Private Sub OnASINChanging(value As String)
    End Sub
    Partial Private Sub OnASINChanged()
    End Sub
    Partial Private Sub OnSchemeIDChanging(value As String)
    End Sub
    Partial Private Sub OnSchemeIDChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnLastChangeByChanging(value As String)
    End Sub
    Partial Private Sub OnLastChangeByChanged()
    End Sub
    Partial Private Sub OnLastChangeDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastChangeDateChanged()
    End Sub
    Partial Private Sub OnCalcCostChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCalcCostChanged()
    End Sub
    Partial Private Sub OnCalcDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCalcDateChanged()
    End Sub
    Partial Private Sub OnCalcOverideChanging(value As Char)
    End Sub
    Partial Private Sub OnCalcOverideChanged()
    End Sub
    Partial Private Sub OnCalcDescChanging(value As String)
    End Sub
    Partial Private Sub OnCalcDescChanged()
    End Sub
    Partial Private Sub OnReorderableItemChanging(value As Char)
    End Sub
    Partial Private Sub OnReorderableItemChanged()
    End Sub
    Partial Private Sub OnRetailTextChanging(value As String)
    End Sub
    Partial Private Sub OnRetailTextChanged()
    End Sub
    Partial Private Sub OnUPCChanging(value As String)
    End Sub
    Partial Private Sub OnUPCChanged()
    End Sub
    Partial Private Sub OnUnitsPerCaseChanging(value As Integer)
    End Sub
    Partial Private Sub OnUnitsPerCaseChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnTTBProdTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTTBProdTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me.OnItemCodeChanging(value)
				Me.SendPropertyChanging
				Me._ItemCode = value
				Me.SendPropertyChanged("ItemCode")
				Me.OnItemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Discount", DbType:="Float")>  _
	Public Property Discount() As System.Nullable(Of Double)
		Get
			Return Me._Discount
		End Get
		Set
			If (Me._Discount.Equals(value) = false) Then
				Me.OnDiscountChanging(value)
				Me.SendPropertyChanging
				Me._Discount = value
				Me.SendPropertyChanged("Discount")
				Me.OnDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorItemNo", DbType:="VarChar(14)")>  _
	Public Property VendorItemNo() As String
		Get
			Return Me._VendorItemNo
		End Get
		Set
			If (String.Equals(Me._VendorItemNo, value) = false) Then
				Me.OnVendorItemNoChanging(value)
				Me.SendPropertyChanging
				Me._VendorItemNo = value
				Me.SendPropertyChanged("VendorItemNo")
				Me.OnVendorItemNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASIN", DbType:="VarChar(10)")>  _
	Public Property ASIN() As String
		Get
			Return Me._ASIN
		End Get
		Set
			If (String.Equals(Me._ASIN, value) = false) Then
				Me.OnASINChanging(value)
				Me.SendPropertyChanging
				Me._ASIN = value
				Me.SendPropertyChanged("ASIN")
				Me.OnASINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me.OnSchemeIDChanging(value)
				Me.SendPropertyChanging
				Me._SchemeID = value
				Me.SendPropertyChanged("SchemeID")
				Me.OnSchemeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="Char(10)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastChangeBy", DbType:="Char(10)")>  _
	Public Property LastChangeBy() As String
		Get
			Return Me._LastChangeBy
		End Get
		Set
			If (String.Equals(Me._LastChangeBy, value) = false) Then
				Me.OnLastChangeByChanging(value)
				Me.SendPropertyChanging
				Me._LastChangeBy = value
				Me.SendPropertyChanged("LastChangeBy")
				Me.OnLastChangeByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastChangeDate", DbType:="SmallDateTime")>  _
	Public Property LastChangeDate() As System.Nullable(Of Date)
		Get
			Return Me._LastChangeDate
		End Get
		Set
			If (Me._LastChangeDate.Equals(value) = false) Then
				Me.OnLastChangeDateChanging(value)
				Me.SendPropertyChanging
				Me._LastChangeDate = value
				Me.SendPropertyChanged("LastChangeDate")
				Me.OnLastChangeDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalcCost", DbType:="Money NOT NULL")>  _
	Public Property CalcCost() As Decimal
		Get
			Return Me._CalcCost
		End Get
		Set
			If ((Me._CalcCost = value)  _
						= false) Then
				Me.OnCalcCostChanging(value)
				Me.SendPropertyChanging
				Me._CalcCost = value
				Me.SendPropertyChanged("CalcCost")
				Me.OnCalcCostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalcDate", DbType:="DateTime")>  _
	Public Property CalcDate() As System.Nullable(Of Date)
		Get
			Return Me._CalcDate
		End Get
		Set
			If (Me._CalcDate.Equals(value) = false) Then
				Me.OnCalcDateChanging(value)
				Me.SendPropertyChanging
				Me._CalcDate = value
				Me.SendPropertyChanged("CalcDate")
				Me.OnCalcDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalcOveride", DbType:="Char(1) NOT NULL")>  _
	Public Property CalcOveride() As Char
		Get
			Return Me._CalcOveride
		End Get
		Set
			If ((Me._CalcOveride = value)  _
						= false) Then
				Me.OnCalcOverideChanging(value)
				Me.SendPropertyChanging
				Me._CalcOveride = value
				Me.SendPropertyChanged("CalcOveride")
				Me.OnCalcOverideChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CalcDesc", DbType:="VarChar(50)")>  _
	Public Property CalcDesc() As String
		Get
			Return Me._CalcDesc
		End Get
		Set
			If (String.Equals(Me._CalcDesc, value) = false) Then
				Me.OnCalcDescChanging(value)
				Me.SendPropertyChanging
				Me._CalcDesc = value
				Me.SendPropertyChanged("CalcDesc")
				Me.OnCalcDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReorderableItem", DbType:="Char(1) NOT NULL")>  _
	Public Property ReorderableItem() As Char
		Get
			Return Me._ReorderableItem
		End Get
		Set
			If ((Me._ReorderableItem = value)  _
						= false) Then
				Me.OnReorderableItemChanging(value)
				Me.SendPropertyChanging
				Me._ReorderableItem = value
				Me.SendPropertyChanged("ReorderableItem")
				Me.OnReorderableItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RetailText", DbType:="VarChar(15)")>  _
	Public Property RetailText() As String
		Get
			Return Me._RetailText
		End Get
		Set
			If (String.Equals(Me._RetailText, value) = false) Then
				Me.OnRetailTextChanging(value)
				Me.SendPropertyChanging
				Me._RetailText = value
				Me.SendPropertyChanged("RetailText")
				Me.OnRetailTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPC", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property UPC() As String
		Get
			Return Me._UPC
		End Get
		Set
			If (String.Equals(Me._UPC, value) = false) Then
				Me.OnUPCChanging(value)
				Me.SendPropertyChanging
				Me._UPC = value
				Me.SendPropertyChanged("UPC")
				Me.OnUPCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitsPerCase", DbType:="Int NOT NULL")>  _
	Public Property UnitsPerCase() As Integer
		Get
			Return Me._UnitsPerCase
		End Get
		Set
			If ((Me._UnitsPerCase = value)  _
						= false) Then
				Me.OnUnitsPerCaseChanging(value)
				Me.SendPropertyChanging
				Me._UnitsPerCase = value
				Me.SendPropertyChanged("UnitsPerCase")
				Me.OnUnitsPerCaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
	Public Property Active() As Boolean
		Get
			Return Me._Active
		End Get
		Set
			If ((Me._Active = value)  _
						= false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTBProdType", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property TTBProdType() As String
		Get
			Return Me._TTBProdType
		End Get
		Set
			If (String.Equals(Me._TTBProdType, value) = false) Then
				Me.OnTTBProdTypeChanging(value)
				Me.SendPropertyChanging
				Me._TTBProdType = value
				Me.SendPropertyChanged("TTBProdType")
				Me.OnTTBProdTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwStoreOrds2Export")>  _
Partial Public Class vwStoreOrds2Export
	
	Private _PONumber As String
	
	Private _Status As Integer
	
	Private _RequisitionNo As String
	
	Private _LocationNo As String
	
	Private _VendorID As String
	
	Private _OrderType As String
	
	Private _DateApprovedDisapproved As System.Nullable(Of Date)
	
	Private _StoreID As String
	
	Private _Name As String
	
	Private _GPCustomer As String
	
	Private _SiteID As String
	
	Private _MailToAddress1 As String
	
	Private _MailToAddress2 As String
	
	Private _MailToCity As String
	
	Private _MailToState As String
	
	Private _MailToZip As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me._PONumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequisitionNo", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property RequisitionNo() As String
		Get
			Return Me._RequisitionNo
		End Get
		Set
			If (String.Equals(Me._RequisitionNo, value) = false) Then
				Me._RequisitionNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me._LocationNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10)")>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me._VendorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderType", DbType:="VarChar(30)")>  _
	Public Property OrderType() As String
		Get
			Return Me._OrderType
		End Get
		Set
			If (String.Equals(Me._OrderType, value) = false) Then
				Me._OrderType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApprovedDisapproved", DbType:="SmallDateTime")>  _
	Public Property DateApprovedDisapproved() As System.Nullable(Of Date)
		Get
			Return Me._DateApprovedDisapproved
		End Get
		Set
			If (Me._DateApprovedDisapproved.Equals(value) = false) Then
				Me._DateApprovedDisapproved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoreID", DbType:="VarChar(3)")>  _
	Public Property StoreID() As String
		Get
			Return Me._StoreID
		End Get
		Set
			If (String.Equals(Me._StoreID, value) = false) Then
				Me._StoreID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPCustomer", DbType:="VarChar(6)")>  _
	Public Property GPCustomer() As String
		Get
			Return Me._GPCustomer
		End Get
		Set
			If (String.Equals(Me._GPCustomer, value) = false) Then
				Me._GPCustomer = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SiteID", DbType:="VarChar(3)")>  _
	Public Property SiteID() As String
		Get
			Return Me._SiteID
		End Get
		Set
			If (String.Equals(Me._SiteID, value) = false) Then
				Me._SiteID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress1", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress1() As String
		Get
			Return Me._MailToAddress1
		End Get
		Set
			If (String.Equals(Me._MailToAddress1, value) = false) Then
				Me._MailToAddress1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress2", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress2() As String
		Get
			Return Me._MailToAddress2
		End Get
		Set
			If (String.Equals(Me._MailToAddress2, value) = false) Then
				Me._MailToAddress2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToCity", DbType:="VarChar(30)")>  _
	Public Property MailToCity() As String
		Get
			Return Me._MailToCity
		End Get
		Set
			If (String.Equals(Me._MailToCity, value) = false) Then
				Me._MailToCity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToState", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToState() As String
		Get
			Return Me._MailToState
		End Get
		Set
			If (String.Equals(Me._MailToState, value) = false) Then
				Me._MailToState = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToZip", DbType:="VarChar(5)")>  _
	Public Property MailToZip() As String
		Get
			Return Me._MailToZip
		End Get
		Set
			If (String.Equals(Me._MailToZip, value) = false) Then
				Me._MailToZip = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwStoreOrdDtls2Export")>  _
Partial Public Class vwStoreOrdDtls2Export
	
	Private _RequisitionNo As String
	
	Private _ItemCode As String
	
	Private _OrderQty As System.Nullable(Of Integer)
	
	Private _Description As String
	
	Private _ProductType As String
	
	Private _Cost As Decimal
	
	Private _Price As Decimal
	
	Private _SectionCode As String
	
	Private _DistributionCategory As String
	
	Private _MfgSuggestedPrice As System.Nullable(Of Decimal)
	
	Private _Company As String
	
	Private _Markdown As String
	
	Private _SchemeID As String
	
	Private _TTBProdType As String
	
	Private _GPItemCode As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _LineID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequisitionNo", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property RequisitionNo() As String
		Get
			Return Me._RequisitionNo
		End Get
		Set
			If (String.Equals(Me._RequisitionNo, value) = false) Then
				Me._RequisitionNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="Char(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me._ItemCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderQty", DbType:="Int")>  _
	Public Property OrderQty() As System.Nullable(Of Integer)
		Get
			Return Me._OrderQty
		End Get
		Set
			If (Me._OrderQty.Equals(value) = false) Then
				Me._OrderQty = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductType", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property ProductType() As String
		Get
			Return Me._ProductType
		End Get
		Set
			If (String.Equals(Me._ProductType, value) = false) Then
				Me._ProductType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money NOT NULL")>  _
	Public Property Cost() As Decimal
		Get
			Return Me._Cost
		End Get
		Set
			If ((Me._Cost = value)  _
						= false) Then
				Me._Cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money NOT NULL")>  _
	Public Property Price() As Decimal
		Get
			Return Me._Price
		End Get
		Set
			If ((Me._Price = value)  _
						= false) Then
				Me._Price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SectionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property SectionCode() As String
		Get
			Return Me._SectionCode
		End Get
		Set
			If (String.Equals(Me._SectionCode, value) = false) Then
				Me._SectionCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DistributionCategory", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property DistributionCategory() As String
		Get
			Return Me._DistributionCategory
		End Get
		Set
			If (String.Equals(Me._DistributionCategory, value) = false) Then
				Me._DistributionCategory = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MfgSuggestedPrice", DbType:="Money")>  _
	Public Property MfgSuggestedPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._MfgSuggestedPrice
		End Get
		Set
			If (Me._MfgSuggestedPrice.Equals(value) = false) Then
				Me._MfgSuggestedPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Company() As String
		Get
			Return Me._Company
		End Get
		Set
			If (String.Equals(Me._Company, value) = false) Then
				Me._Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Markdown", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Markdown() As String
		Get
			Return Me._Markdown
		End Get
		Set
			If (String.Equals(Me._Markdown, value) = false) Then
				Me._Markdown = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me._SchemeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTBProdType", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property TTBProdType() As String
		Get
			Return Me._TTBProdType
		End Get
		Set
			If (String.Equals(Me._TTBProdType, value) = false) Then
				Me._TTBProdType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPItemCode", DbType:="VarChar(8)")>  _
	Public Property GPItemCode() As String
		Get
			Return Me._GPItemCode
		End Get
		Set
			If (String.Equals(Me._GPItemCode, value) = false) Then
				Me._GPItemCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="SmallDateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineID", DbType:="Int")>  _
	Public Property LineID() As System.Nullable(Of Integer)
		Get
			Return Me._LineID
		End Get
		Set
			If (Me._LineID.Equals(value) = false) Then
				Me._LineID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwStorePOs2Export")>  _
Partial Public Class vwStorePOs2Export
	
	Private _PONumber As String
	
	Private _LocationNo As String
	
	Private _BuyerID As String
	
	Private _VendorID As String
	
	Private _TermsCode As String
	
	Private _PODate As System.Nullable(Of Date)
	
	Private _OrderAmount As System.Nullable(Of Decimal)
	
	Private _ShipToName As String
	
	Private _ShipToAddress1 As String
	
	Private _ShipToAddress2 As String
	
	Private _ShipToAddress3 As String
	
	Private _WMSType As String
	
	Private _Abbreviation As String
	
	Private _Name As String
	
	Private _MailToName As String
	
	Private _MailToAddress1 As String
	
	Private _MailToAddress2 As String
	
	Private _MailToAddress3 As String
	
	Private _MailToCountry As String
	
	Private _CountryCode As String
	
	Private _StateCode As String
	
	Private _VenName As String
	
	Private _VenAdd1 As String
	
	Private _VenAdd2 As String
	
	Private _VenCity As String
	
	Private _VenState As String
	
	Private _VenZip As String
	
	Private _VenTermsCode As String
	
	Private _OrderType As String
	
	Private _TermsDays As Integer
	
	Private _Status As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me._PONumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me._LocationNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BuyerID", DbType:="VarChar(10)")>  _
	Public Property BuyerID() As String
		Get
			Return Me._BuyerID
		End Get
		Set
			If (String.Equals(Me._BuyerID, value) = false) Then
				Me._BuyerID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10)")>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me._VendorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TermsCode", DbType:="VarChar(10)")>  _
	Public Property TermsCode() As String
		Get
			Return Me._TermsCode
		End Get
		Set
			If (String.Equals(Me._TermsCode, value) = false) Then
				Me._TermsCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="SmallDateTime")>  _
	Public Property PODate() As System.Nullable(Of Date)
		Get
			Return Me._PODate
		End Get
		Set
			If (Me._PODate.Equals(value) = false) Then
				Me._PODate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderAmount", DbType:="Money")>  _
	Public Property OrderAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OrderAmount
		End Get
		Set
			If (Me._OrderAmount.Equals(value) = false) Then
				Me._OrderAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToName", DbType:="VarChar(30)")>  _
	Public Property ShipToName() As String
		Get
			Return Me._ShipToName
		End Get
		Set
			If (String.Equals(Me._ShipToName, value) = false) Then
				Me._ShipToName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress1", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress1() As String
		Get
			Return Me._ShipToAddress1
		End Get
		Set
			If (String.Equals(Me._ShipToAddress1, value) = false) Then
				Me._ShipToAddress1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress2", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress2() As String
		Get
			Return Me._ShipToAddress2
		End Get
		Set
			If (String.Equals(Me._ShipToAddress2, value) = false) Then
				Me._ShipToAddress2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress3", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress3() As String
		Get
			Return Me._ShipToAddress3
		End Get
		Set
			If (String.Equals(Me._ShipToAddress3, value) = false) Then
				Me._ShipToAddress3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WMSType", DbType:="VarChar(20)")>  _
	Public Property WMSType() As String
		Get
			Return Me._WMSType
		End Get
		Set
			If (String.Equals(Me._WMSType, value) = false) Then
				Me._WMSType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abbreviation", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Abbreviation() As String
		Get
			Return Me._Abbreviation
		End Get
		Set
			If (String.Equals(Me._Abbreviation, value) = false) Then
				Me._Abbreviation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToName", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToName() As String
		Get
			Return Me._MailToName
		End Get
		Set
			If (String.Equals(Me._MailToName, value) = false) Then
				Me._MailToName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress1", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress1() As String
		Get
			Return Me._MailToAddress1
		End Get
		Set
			If (String.Equals(Me._MailToAddress1, value) = false) Then
				Me._MailToAddress1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress2", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress2() As String
		Get
			Return Me._MailToAddress2
		End Get
		Set
			If (String.Equals(Me._MailToAddress2, value) = false) Then
				Me._MailToAddress2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress3", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress3() As String
		Get
			Return Me._MailToAddress3
		End Get
		Set
			If (String.Equals(Me._MailToAddress3, value) = false) Then
				Me._MailToAddress3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToCountry", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToCountry() As String
		Get
			Return Me._MailToCountry
		End Get
		Set
			If (String.Equals(Me._MailToCountry, value) = false) Then
				Me._MailToCountry = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountryCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property CountryCode() As String
		Get
			Return Me._CountryCode
		End Get
		Set
			If (String.Equals(Me._CountryCode, value) = false) Then
				Me._CountryCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateCode", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property StateCode() As String
		Get
			Return Me._StateCode
		End Get
		Set
			If (String.Equals(Me._StateCode, value) = false) Then
				Me._StateCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenName", DbType:="VarChar(30)")>  _
	Public Property VenName() As String
		Get
			Return Me._VenName
		End Get
		Set
			If (String.Equals(Me._VenName, value) = false) Then
				Me._VenName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenAdd1", DbType:="VarChar(30)")>  _
	Public Property VenAdd1() As String
		Get
			Return Me._VenAdd1
		End Get
		Set
			If (String.Equals(Me._VenAdd1, value) = false) Then
				Me._VenAdd1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenAdd2", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property VenAdd2() As String
		Get
			Return Me._VenAdd2
		End Get
		Set
			If (String.Equals(Me._VenAdd2, value) = false) Then
				Me._VenAdd2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenCity", DbType:="VarChar(25)")>  _
	Public Property VenCity() As String
		Get
			Return Me._VenCity
		End Get
		Set
			If (String.Equals(Me._VenCity, value) = false) Then
				Me._VenCity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenState", DbType:="VarChar(2)")>  _
	Public Property VenState() As String
		Get
			Return Me._VenState
		End Get
		Set
			If (String.Equals(Me._VenState, value) = false) Then
				Me._VenState = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenZip", DbType:="VarChar(10)")>  _
	Public Property VenZip() As String
		Get
			Return Me._VenZip
		End Get
		Set
			If (String.Equals(Me._VenZip, value) = false) Then
				Me._VenZip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenTermsCode", DbType:="VarChar(10)")>  _
	Public Property VenTermsCode() As String
		Get
			Return Me._VenTermsCode
		End Get
		Set
			If (String.Equals(Me._VenTermsCode, value) = false) Then
				Me._VenTermsCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderType", DbType:="VarChar(30)")>  _
	Public Property OrderType() As String
		Get
			Return Me._OrderType
		End Get
		Set
			If (String.Equals(Me._OrderType, value) = false) Then
				Me._OrderType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TermsDays", DbType:="Int NOT NULL")>  _
	Public Property TermsDays() As Integer
		Get
			Return Me._TermsDays
		End Get
		Set
			If ((Me._TermsDays = value)  _
						= false) Then
				Me._TermsDays = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwPO2Export")>  _
Partial Public Class vwPO2Export
	
	Private _PONumber As String
	
	Private _Status As Integer
	
	Private _LocationNo As String
	
	Private _BuyerID As String
	
	Private _VendorID As String
	
	Private _PODate As System.Nullable(Of Date)
	
	Private _OrderAmount As System.Nullable(Of Decimal)
	
	Private _ShipToName As String
	
	Private _ShipToAddress1 As String
	
	Private _ShipToAddress2 As String
	
	Private _ShipToAddress3 As String
	
	Private _WMSType As String
	
	Private _Abbreviation As String
	
	Private _Name As String
	
	Private _MailToName As String
	
	Private _MailToAddress1 As String
	
	Private _MailToAddress2 As String
	
	Private _MailToAddress3 As String
	
	Private _MailToCountry As String
	
	Private _CountryCode As String
	
	Private _StateCode As String
	
	Private _VenName As String
	
	Private _VenAdd1 As String
	
	Private _VenAdd2 As String
	
	Private _VenCity As String
	
	Private _VenState As String
	
	Private _VenZip As String
	
	Private _VenTerms As String
	
	Private _OrderType As String
	
	Private _TermsDays As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me._PONumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocationNo", DbType:="Char(5)")>  _
	Public Property LocationNo() As String
		Get
			Return Me._LocationNo
		End Get
		Set
			If (String.Equals(Me._LocationNo, value) = false) Then
				Me._LocationNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BuyerID", DbType:="VarChar(10)")>  _
	Public Property BuyerID() As String
		Get
			Return Me._BuyerID
		End Get
		Set
			If (String.Equals(Me._BuyerID, value) = false) Then
				Me._BuyerID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10)")>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me._VendorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="SmallDateTime")>  _
	Public Property PODate() As System.Nullable(Of Date)
		Get
			Return Me._PODate
		End Get
		Set
			If (Me._PODate.Equals(value) = false) Then
				Me._PODate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderAmount", DbType:="Money")>  _
	Public Property OrderAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OrderAmount
		End Get
		Set
			If (Me._OrderAmount.Equals(value) = false) Then
				Me._OrderAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToName", DbType:="VarChar(30)")>  _
	Public Property ShipToName() As String
		Get
			Return Me._ShipToName
		End Get
		Set
			If (String.Equals(Me._ShipToName, value) = false) Then
				Me._ShipToName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress1", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress1() As String
		Get
			Return Me._ShipToAddress1
		End Get
		Set
			If (String.Equals(Me._ShipToAddress1, value) = false) Then
				Me._ShipToAddress1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress2", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress2() As String
		Get
			Return Me._ShipToAddress2
		End Get
		Set
			If (String.Equals(Me._ShipToAddress2, value) = false) Then
				Me._ShipToAddress2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipToAddress3", DbType:="VarChar(30)")>  _
	Public Property ShipToAddress3() As String
		Get
			Return Me._ShipToAddress3
		End Get
		Set
			If (String.Equals(Me._ShipToAddress3, value) = false) Then
				Me._ShipToAddress3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WMSType", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property WMSType() As String
		Get
			Return Me._WMSType
		End Get
		Set
			If (String.Equals(Me._WMSType, value) = false) Then
				Me._WMSType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abbreviation", DbType:="VarChar(8) NOT NULL", CanBeNull:=false)>  _
	Public Property Abbreviation() As String
		Get
			Return Me._Abbreviation
		End Get
		Set
			If (String.Equals(Me._Abbreviation, value) = false) Then
				Me._Abbreviation = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToName", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToName() As String
		Get
			Return Me._MailToName
		End Get
		Set
			If (String.Equals(Me._MailToName, value) = false) Then
				Me._MailToName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress1", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress1() As String
		Get
			Return Me._MailToAddress1
		End Get
		Set
			If (String.Equals(Me._MailToAddress1, value) = false) Then
				Me._MailToAddress1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress2", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress2() As String
		Get
			Return Me._MailToAddress2
		End Get
		Set
			If (String.Equals(Me._MailToAddress2, value) = false) Then
				Me._MailToAddress2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToAddress3", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToAddress3() As String
		Get
			Return Me._MailToAddress3
		End Get
		Set
			If (String.Equals(Me._MailToAddress3, value) = false) Then
				Me._MailToAddress3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MailToCountry", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property MailToCountry() As String
		Get
			Return Me._MailToCountry
		End Get
		Set
			If (String.Equals(Me._MailToCountry, value) = false) Then
				Me._MailToCountry = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountryCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property CountryCode() As String
		Get
			Return Me._CountryCode
		End Get
		Set
			If (String.Equals(Me._CountryCode, value) = false) Then
				Me._CountryCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateCode", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property StateCode() As String
		Get
			Return Me._StateCode
		End Get
		Set
			If (String.Equals(Me._StateCode, value) = false) Then
				Me._StateCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenName", DbType:="VarChar(30)")>  _
	Public Property VenName() As String
		Get
			Return Me._VenName
		End Get
		Set
			If (String.Equals(Me._VenName, value) = false) Then
				Me._VenName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenAdd1", DbType:="VarChar(30)")>  _
	Public Property VenAdd1() As String
		Get
			Return Me._VenAdd1
		End Get
		Set
			If (String.Equals(Me._VenAdd1, value) = false) Then
				Me._VenAdd1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenAdd2", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property VenAdd2() As String
		Get
			Return Me._VenAdd2
		End Get
		Set
			If (String.Equals(Me._VenAdd2, value) = false) Then
				Me._VenAdd2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenCity", DbType:="VarChar(25)")>  _
	Public Property VenCity() As String
		Get
			Return Me._VenCity
		End Get
		Set
			If (String.Equals(Me._VenCity, value) = false) Then
				Me._VenCity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenState", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property VenState() As String
		Get
			Return Me._VenState
		End Get
		Set
			If (String.Equals(Me._VenState, value) = false) Then
				Me._VenState = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenZip", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property VenZip() As String
		Get
			Return Me._VenZip
		End Get
		Set
			If (String.Equals(Me._VenZip, value) = false) Then
				Me._VenZip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VenTerms", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property VenTerms() As String
		Get
			Return Me._VenTerms
		End Get
		Set
			If (String.Equals(Me._VenTerms, value) = false) Then
				Me._VenTerms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderType", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property OrderType() As String
		Get
			Return Me._OrderType
		End Get
		Set
			If (String.Equals(Me._OrderType, value) = false) Then
				Me._OrderType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TermsDays", DbType:="Int NOT NULL")>  _
	Public Property TermsDays() As Integer
		Get
			Return Me._TermsDays
		End Get
		Set
			If ((Me._TermsDays = value)  _
						= false) Then
				Me._TermsDays = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwPODtl2Export")>  _
Partial Public Class vwPODtl2Export
	
	Private _PONumber As String
	
	Private _POLine As String
	
	Private _ItemCode As String
	
	Private _OrderQty As System.Nullable(Of Integer)
	
	Private _UOM As String
	
	Private _Description As String
	
	Private _ProductType As String
	
	Private _VendorID As String
	
	Private _Cost As Decimal
	
	Private _Price As Decimal
	
	Private _SectionCode As String
	
	Private _DistributionCategory As String
	
	Private _Title As String
	
	Private _MfgSuggestedPrice As System.Nullable(Of Decimal)
	
	Private _Company As String
	
	Private _Markdown As String
	
	Private _UnitCost As System.Nullable(Of Decimal)
	
	Private _ExtendedLineCost As System.Nullable(Of Decimal)
	
	Private _TTBProdType As String
	
	Private _SchemeID As String
	
	Private _GPItemCode As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PONumber", DbType:="Char(6) NOT NULL", CanBeNull:=false)>  _
	Public Property PONumber() As String
		Get
			Return Me._PONumber
		End Get
		Set
			If (String.Equals(Me._PONumber, value) = false) Then
				Me._PONumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POLine", DbType:="Char(5) NOT NULL", CanBeNull:=false)>  _
	Public Property POLine() As String
		Get
			Return Me._POLine
		End Get
		Set
			If (String.Equals(Me._POLine, value) = false) Then
				Me._POLine = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="VarChar(20)")>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me._ItemCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderQty", DbType:="Int")>  _
	Public Property OrderQty() As System.Nullable(Of Integer)
		Get
			Return Me._OrderQty
		End Get
		Set
			If (Me._OrderQty.Equals(value) = false) Then
				Me._OrderQty = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UOM", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property UOM() As String
		Get
			Return Me._UOM
		End Get
		Set
			If (String.Equals(Me._UOM, value) = false) Then
				Me._UOM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductType", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property ProductType() As String
		Get
			Return Me._ProductType
		End Get
		Set
			If (String.Equals(Me._ProductType, value) = false) Then
				Me._ProductType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me._VendorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money NOT NULL")>  _
	Public Property Cost() As Decimal
		Get
			Return Me._Cost
		End Get
		Set
			If ((Me._Cost = value)  _
						= false) Then
				Me._Cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Money NOT NULL")>  _
	Public Property Price() As Decimal
		Get
			Return Me._Price
		End Get
		Set
			If ((Me._Price = value)  _
						= false) Then
				Me._Price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SectionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property SectionCode() As String
		Get
			Return Me._SectionCode
		End Get
		Set
			If (String.Equals(Me._SectionCode, value) = false) Then
				Me._SectionCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DistributionCategory", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property DistributionCategory() As String
		Get
			Return Me._DistributionCategory
		End Get
		Set
			If (String.Equals(Me._DistributionCategory, value) = false) Then
				Me._DistributionCategory = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MfgSuggestedPrice", DbType:="Money")>  _
	Public Property MfgSuggestedPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._MfgSuggestedPrice
		End Get
		Set
			If (Me._MfgSuggestedPrice.Equals(value) = false) Then
				Me._MfgSuggestedPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Company() As String
		Get
			Return Me._Company
		End Get
		Set
			If (String.Equals(Me._Company, value) = false) Then
				Me._Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Markdown", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Markdown() As String
		Get
			Return Me._Markdown
		End Get
		Set
			If (String.Equals(Me._Markdown, value) = false) Then
				Me._Markdown = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitCost", DbType:="Money")>  _
	Public Property UnitCost() As System.Nullable(Of Decimal)
		Get
			Return Me._UnitCost
		End Get
		Set
			If (Me._UnitCost.Equals(value) = false) Then
				Me._UnitCost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExtendedLineCost", DbType:="Money")>  _
	Public Property ExtendedLineCost() As System.Nullable(Of Decimal)
		Get
			Return Me._ExtendedLineCost
		End Get
		Set
			If (Me._ExtendedLineCost.Equals(value) = false) Then
				Me._ExtendedLineCost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTBProdType", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property TTBProdType() As String
		Get
			Return Me._TTBProdType
		End Get
		Set
			If (String.Equals(Me._TTBProdType, value) = false) Then
				Me._TTBProdType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me._SchemeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPItemCode", DbType:="VarChar(8)")>  _
	Public Property GPItemCode() As String
		Get
			Return Me._GPItemCode
		End Get
		Set
			If (String.Equals(Me._GPItemCode, value) = false) Then
				Me._GPItemCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="SmallDateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwNewItems")>  _
Partial Public Class vwNewItem
	
	Private _ItemCode As String
	
	Private _Description As String
	
	Private _Cost As System.Nullable(Of Decimal)
	
	Private _Price As System.Nullable(Of Decimal)
	
	Private _Section As String
	
	Private _DistCat As String
	
	Private _ISBN As String
	
	Private _MSRP As System.Nullable(Of Decimal)
	
	Private _Company As String
	
	Private _Markdown As String
	
	Private _SchemeID As String
	
	Private _TTBProdType As String
	
	Private _UPC As String
	
	Private _UnitsPer As Integer
	
	Private _HPBProdType As String
	
	Private _WhsleText As String
	
	Private _Status As Integer
	
	Private _VendorID As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _MarkDownPrcLv As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemCode", DbType:="VarChar(8)")>  _
	Public Property ItemCode() As String
		Get
			Return Me._ItemCode
		End Get
		Set
			If (String.Equals(Me._ItemCode, value) = false) Then
				Me._ItemCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Decimal(8,2)")>  _
	Public Property Cost() As System.Nullable(Of Decimal)
		Get
			Return Me._Cost
		End Get
		Set
			If (Me._Cost.Equals(value) = false) Then
				Me._Cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="Decimal(8,2)")>  _
	Public Property Price() As System.Nullable(Of Decimal)
		Get
			Return Me._Price
		End Get
		Set
			If (Me._Price.Equals(value) = false) Then
				Me._Price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="Char(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me._Section = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DistCat", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property DistCat() As String
		Get
			Return Me._DistCat
		End Get
		Set
			If (String.Equals(Me._DistCat, value) = false) Then
				Me._DistCat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ISBN", DbType:="VarChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property ISBN() As String
		Get
			Return Me._ISBN
		End Get
		Set
			If (String.Equals(Me._ISBN, value) = false) Then
				Me._ISBN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSRP", DbType:="Decimal(8,2)")>  _
	Public Property MSRP() As System.Nullable(Of Decimal)
		Get
			Return Me._MSRP
		End Get
		Set
			If (Me._MSRP.Equals(value) = false) Then
				Me._MSRP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Company", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Company() As String
		Get
			Return Me._Company
		End Get
		Set
			If (String.Equals(Me._Company, value) = false) Then
				Me._Company = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Markdown", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Markdown() As String
		Get
			Return Me._Markdown
		End Get
		Set
			If (String.Equals(Me._Markdown, value) = false) Then
				Me._Markdown = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SchemeID", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property SchemeID() As String
		Get
			Return Me._SchemeID
		End Get
		Set
			If (String.Equals(Me._SchemeID, value) = false) Then
				Me._SchemeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TTBProdType", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property TTBProdType() As String
		Get
			Return Me._TTBProdType
		End Get
		Set
			If (String.Equals(Me._TTBProdType, value) = false) Then
				Me._TTBProdType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPC", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property UPC() As String
		Get
			Return Me._UPC
		End Get
		Set
			If (String.Equals(Me._UPC, value) = false) Then
				Me._UPC = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitsPer", DbType:="Int NOT NULL")>  _
	Public Property UnitsPer() As Integer
		Get
			Return Me._UnitsPer
		End Get
		Set
			If ((Me._UnitsPer = value)  _
						= false) Then
				Me._UnitsPer = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HPBProdType", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property HPBProdType() As String
		Get
			Return Me._HPBProdType
		End Get
		Set
			If (String.Equals(Me._HPBProdType, value) = false) Then
				Me._HPBProdType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WhsleText", DbType:="VarChar(15)")>  _
	Public Property WhsleText() As String
		Get
			Return Me._WhsleText
		End Get
		Set
			If (String.Equals(Me._WhsleText, value) = false) Then
				Me._WhsleText = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VendorID", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property VendorID() As String
		Get
			Return Me._VendorID
		End Get
		Set
			If (String.Equals(Me._VendorID, value) = false) Then
				Me._VendorID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="SmallDateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MarkDownPrcLv", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property MarkDownPrcLv() As String
		Get
			Return Me._MarkDownPrcLv
		End Get
		Set
			If (String.Equals(Me._MarkDownPrcLv, value) = false) Then
				Me._MarkDownPrcLv = value
			End If
		End Set
	End Property
End Class
